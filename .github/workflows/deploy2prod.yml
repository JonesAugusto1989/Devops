name: Deploy2Prod
on:
  push:
    branches:
      - "main"
jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: ConfigGit
        run: |
          git config user.name "[Bot]GitHubActions"
          git config user.email "BotDevOps@teste.com"
      - name: Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.8.2'
      - name: Exibir Envs
        run: |
          java -version
          mvn -version
    
      - name: Clean
        run: mvn clean
        working-directory: ./workspace/CadastroCliente

      - name: Executar testes
        working-directory: ./workspace/CadastroCliente
        run: mvn test

      - name: Build
        run: mvn package -DskipTests
        working-directory: ./workspace/CadastroCliente

      - name: Define a versão do projeto
        shell: powershell
        run: |
          $env:MAJOR = "3"
          $env:MINOR = "0"
          $env:PVERSION = "$env:MAJOR.$env:MINOR"
          echo "MAJOR=$env:MAJOR" >> "$env:GITHUB_ENV"
          echo "MINOR=$env:MINOR" >> "$env:GITHUB_ENV"
          echo "PVERSION=$env:PVERSION" >> "$env:GITHUB_ENV"

      - name: Mostrar alteração a ser efetuada.
        run: |
          echo "MAJOR=${{ env.MAJOR }}"
          echo "MINOR=${{ env.MINOR }}"

      - name: Atualizar versão do POM
        working-directory: ./workspace/CadastroCliente
        shell: powershell
        run:  mvn --batch-mode build-helper:parse-version versions:set "-DnewVersion=$env:MAJOR.$env:MINOR.0-SNAPSHOT" versions:commit
      
      - name: confirmarVersao
        run: |
          echo "A versão final é teste: $($MAJOR).$($MINOR).0-SNAPSHOT"
      - name: Jar Copy
        working-directory: ./workspace/CadastroCliente/
        run: |
          $APP_JAR_PATH = "../../app/app.jar"
          $JAR_FILE = (Get-ChildItem target\*.jar).Name
          Write-Host "Copiando o arquivo JAR: $JAR_FILE para $APP_JAR_PATH"
          Copy-Item target\*.jar -Destination $APP_JAR_PATH

      - name: docker login
        shell: powershell
        run: |
             $password = "${{ secrets.DOCKER_TOKEN }}"
             docker login --username "${{ secrets.USER_NAME }}" --password $password


      - name: Build da imagem
        run: docker build ./app -f app/dockerfile -t cadastrocliente:${{ env.PVERSION }} --no-cache

      - name: Criar tag
        run: docker tag cadastrocliente:${{ env.PVERSION }} jonesparanhos/cadastrocliente:${{ env.PVERSION }}

      - name: docker push
        run: docker push jonesparanhos/cadastrocliente:${{ env.PVERSION }}

      - name: Criar tag latest
        run: docker tag cadastrocliente:${{ env.PVERSION }} jonesparanhos/cadastrocliente:latest

      - name: docker push latest
        run: docker push  jonesparanhos/cadastrocliente:latest
      
      - name: Atualizando K8s
        run: kubectl rollout restart deploy cadastrocliente -n cliente

      - name: Status do deploy
        run:  kubectl rollout status deploy cadastrocliente -n cliente