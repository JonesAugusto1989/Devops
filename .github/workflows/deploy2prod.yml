name: Deploy2Prod
on:
  push:
    branches:
      - "main"
jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      # ... (outras etapas) ...

      - name: Define a versão do projeto
        run: |
          echo "parsedVersion_majorVersion=2" >> $GITHUB_ENV
          echo "parsedVersion_nextMinorVersion=5" >> $GITHUB_ENV

      - name: Mostrar alteração a ser efetuada.
        run: |
          echo "parsedVersion_majorVersion=$parsedVersion_majorVersion"
          echo "parsedVersion_nextMinorVersion=$parsedVersion_nextMinorVersion"

      - name: Atualização de versão Minor
        working-directory: ./workspace/CadastroCliente/
        run: mvn --batch-mode build-helper:parse-version versions:set -DnewVersion="${parsedVersion_majorVersion}.${parsedVersion_nextMinorVersion}.0-SNAPSHOT" versions:commit

      - name: Atualização de versão Major
        working-directory: ./workspace/CadastroCliente
        run: mvn --batch-mode build-helper:parse-version versions:set -DnewVersion="${parsedVersion_nextMajorVersion}.${parsedVersion_minorVersion}.0-SNAPSHOT" versions:commit

      - name: confirmarVersao
        run: |
          echo "A versão final é teste: $($parsedVersion_majorVersion).$($parsedVersion_nextMinorVersion).0-SNAPSHOT"
     # - name: Commit do POM
      #  working-directory: ./workspace/CadastroCliente
       # run: |
        #    git add pom.xml
         #   git commit -m "Alterando a versão do projeto"
          #  git push origin main
      - name: Jar Copy
        working-directory: ./workspace/CadastroCliente/
        run: |
          $APP_JAR_PATH = "../../app/app.jar"
          $JAR_FILE = (Get-ChildItem target\*.jar).Name
          Write-Host "Copiando o arquivo JAR: $JAR_FILE para $APP_JAR_PATH"
          Copy-Item target\*.jar -Destination $APP_JAR_PATH

      - name: Build da imagem
        run: 
            docker build . -f app/dockerfile -t cadastrocliente:3.0

      - name: docker login
        shell: powershell
        run: |
             $password = "${{ secrets.DOCKER_TOKEN }}"
             docker login --username "${{ secrets.USER_NAME }}" --password $password


      - name: Criar tag
        run: docker tag cadastrocliente:3.0 jonesaugusto1989/cadastrocliente:3.0

      - name: docker push
        run: docker push jonesaugusto1989/cadastrocliente:3.0

      - name: Criar tag latest
        run: docker tag cadastrocliente:3.0 jonesaugusto1989/cadastrocliente:latest

      - name: docker push latest
        run: docker push jonesaugusto1989/cadastrocliente:latest
      # - name: Realiza o release
       #  working-directory: ./workspace/CadastroCliente
       #  run: mvn --batch-mode release: clean release:prepare release:perform -Darguments="-Dmaven.javadoc.skip=true -Dmaven.test.skipTests=true -Dmaven.test.skip=true" -Dusername=${{ secrets.USERNAME }} -Dpassword=${{ secrets.PASSWORD }}

