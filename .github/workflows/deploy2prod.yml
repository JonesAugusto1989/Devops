name: Deploy2Prod
on:
  push:
    branches:
      - "main"
jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: ConfigGit
        run: |
          git config user.name "JonesAugusto1989"
      - name: Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.8.2'
      - name: Exibir Envs
        run: |
          java -version
          mvn -version
      - name: Clean
        run: mvn clean
        working-directory: ./workspace/CadastroCliente
      #- name: Executar testes
      #  run: mvn test
      #  working-directory: ./workspace/CadastroCliente
      - name: Build
        run: mvn package -DskipTests
        working-directory: ./workspace/CadastroCliente
     #- name: Check code version
      # echo "nova versão é": ${{steps.increment-version.new_version}}

      - name: Definir variáveis de versão
        run: |
          echo "parsedVersion_majorVersion=1" >> $GITHUB_ENV
          echo "parsedVersion_nextMinorVersion=2" >> $GITHUB_ENV

      - name: Depuração das variáveis
        run: |
          echo "parsedVersion_majorVersion=$parsedVersion_majorVersion"
          echo "parsedVersion_nextMinorVersion=$parsedVersion_nextMinorVersion"

      - name: Atualiza a versão Minor
        working-directory: ./workspace/CadastroCliente/
        run: mvn --batch-mode build-helper:parse-version versions:set -DnewVersion="${parsedVersion_majorVersion}.${parsedVersion_nextMinorVersion}.0-SNAPSHOT" versions:commit

      - name: Atualiza a versão Major
        working-directory: ./workspace/CadastroCliente
        run: mvn --batch-mode build-helper:parse-version versions:set -DnewVersion="${parsedVersion_nextMajorVersion}.${parsedVersion_minorVersion}.0-SNAPSHOT" versions:commit

      - name: Realiza o release
        working-directory: ./workspace/CadastroCliente
        run: mvn --batch-mode release:clean release:prepare release:perform -Darguments="-Dmaven.javadoc.skip=true -Dmaven.test.skipTests=true -Dmaven.test.skip=true" -Dusername=${{ secrets.USERNAME }} -Dpassword=${{ secrets.PASSWORD }}

